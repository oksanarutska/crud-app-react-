{"version":3,"sources":["componens/Header/Header.jsx","componens/UserRow/UserRow.jsx","componens/TableHeaderCell/TableHeaderCell.jsx","componens/TableUSers/TableUsers.jsx","componens/Button/Button.jsx","AppBackend.js","componens/Modal/Modal.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","onSearchChange","onSelectChange","limit","react_default","a","createElement","Container","Row","Col","md","Form","Control","as","onChange","defaultValue","span","offset","type","placeholder","UserRow","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleMode","setState","isEditMode","state","inherits","createClass","key","value","_this$props","id","name","email","onDelete","Button","onClick","className","e","React","Component","TableHeaderCell","order","title","arrowUpClassName","classNames","table-header-cell__arrow_active","arrowDownClassName","TableUsers","apply","arguments","Table","striped","bordered","hover","TableHeaderCell_TableHeaderCell_TableHeaderCell","users","map","user","index","UserRow_UserRow_UserRow","assign","mode","ButtonUser","currentPage","onPageChange","ButtonToolbar","variant","AppBackend","baseUrl","window","location","hostname","_ref","_ref$page","page","_ref$limit","_ref$search","search","fetch","concat","then","response","json","method","headers","Accept","Content-Type","body","JSON","stringify","ModalAddUser","_Component","_getPrototypeOf2","_len","length","args","Array","_key","show","handleClose","handleShow","react_bootstrap_Button_default","Modal_default","onHide","closeButton","Title","Body","Group","controlId","Footer","App","event","target","updateUsers","asyncToGenerator","regenerator_default","mark","_callee","_this$state","wrap","_context","prev","next","backend","get","sent","stop","userId","_this2","delete","_","Modal_ModalAddUser","Header_Header","TableUsers_TableUsers","bind","Button_ButtonUser","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bff0a03c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/es/Form\";\r\n\r\n\r\nexport const Header = (props) => {\r\n    const {onSearchChange, onSelectChange, limit} = props;\r\n\r\n    return (\r\n        <header>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={4}>\r\n\r\n                        <Form.Control as=\"select\" onChange={onSelectChange} defaultValue={limit}>\r\n                            <option>5</option>\r\n                            <option>10</option>\r\n                            <option>15</option>\r\n\r\n                        </Form.Control>\r\n\r\n                    </Col>\r\n                    <Col md={{span: 4, offset: 4}}>\r\n                        <Form.Control type=\"text\" placeholder=\"Search\" onChange={onSearchChange}/>\r\n                        <br/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </header>\r\n    )\r\n}","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport  \"./UserRow.css\"\r\n\r\n\r\nexport class UserRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEditMode: false\r\n        };\r\n    }\r\n\r\n    toggleMode = () => {\r\n        this.setState({\r\n            isEditMode: !this.state.isEditMode\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {id, name, email, onDelete} = this.props;\r\n        const {isEditMode} = this.state;\r\n\r\n        return (\r\n            <tr>\r\n                <td>{id}</td>\r\n                <td>{isEditMode ? <input type=\"text\" value={name} /> : name}</td>\r\n                <td>{email}</td>\r\n\r\n                <td>\r\n                    {isEditMode ? (\r\n                        <Button onClick={this.toggleMode}>Save</Button>\r\n                    ) : (\r\n                        <Button onClick={this.toggleMode}>Update</Button>\r\n                    )}\r\n                    <Button className=\"button_delete\" onClick={e => onDelete(id)}>Delete</Button>\r\n\r\n                </td>\r\n\r\n\r\n\r\n\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './TableHeaderCell.css'\r\nimport * as classNames from 'classnames';\r\n\r\nexport const TableHeaderCell = (props) => {\r\n    const { order, title } = props;\r\n    let arrowUpClassName = classNames('fas fa-sort-up table-header-cell__arow i_button',{'table-header-cell__arrow_active': order === 'asc'});\r\n    let arrowDownClassName = classNames( 'fas fa-sort-down table-header-cell__arow i_button',{'table-header-cell__arrow_active': order === 'desc'} );\r\n\r\n\r\n\r\n\r\n    return (\r\n        <td>\r\n            <div className=\"table-header-cell\">\r\n                <span className=\"table-header-cell__title\">{title}</span>\r\n                <div className=\"table-header-cell__arows arrow_button\">\r\n                    <i className={arrowUpClassName}  />\r\n                    <i className={arrowDownClassName} />\r\n                </div>\r\n            </div>\r\n        </td>\r\n\r\n    );\r\n\r\n};","import React from \"react\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport {UserRow} from \"../UserRow/UserRow\";\r\nimport './TableUser.css';\r\nimport {TableHeaderCell} from \"../TableHeaderCell/TableHeaderCell\";\r\n\r\nexport class TableUsers extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr>\r\n                        <TableHeaderCell title=\"#\" order=\"desc\"/>\r\n                        <TableHeaderCell title=\"Name\" order=\"asc\"/>\r\n                        <TableHeaderCell title=\"Email\"/>\r\n                        <td>\r\n                            Actions\r\n                        </td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.props.users.map((user, index) => {\r\n                            return <UserRow{...user} mode={index % 2 ? \"edit\" : \"view\"} key={user.id} {...this.props}/>\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button, ButtonToolbar} from \"react-bootstrap\";\r\nimport \"./Button.css\"\r\n\r\n\r\nexport class ButtonUser extends React.Component {\r\n    render() {\r\n        const {currentPage, onPageChange} = this.props;\r\n        return (\r\n\r\n            <footer className=\"button_cell\">\r\n                <ButtonToolbar className='button_group'>\r\n                    <Button className=\"pre_button\" variant=\"primary\"\r\n                            onClick={() => onPageChange(currentPage - 1)}>Prev</Button>\r\n                    <Button variant=\"primary\" onClick={() => onPageChange(currentPage + 1)}>Next</Button>\r\n\r\n                </ButtonToolbar>;\r\n            </footer>\r\n        )\r\n    };\r\n}","export class AppBackend {\r\n    constructor() {\r\n        this.baseUrl = 'https://5bf417c491c25b0013a3b9a2.mockapi.io'\r\n    }\r\n\r\n    isDevEnvironment() {\r\n        return window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n    }\r\n\r\n    get({page = 1, limit = 5, search = ''}) {\r\n        return fetch(`${this.baseUrl}/users?page=${page}&limit=${limit}&search=${search}`)\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n    }\r\n\r\n    create(user) {\r\n        return fetch(`${this.baseUrl}/users`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        });\r\n    }\r\n\r\n    delete(id) {\r\n        return fetch(`${this.baseUrl}/users/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    update(user) {\r\n        return fetch(`${this.baseUrl}/users/${user.id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        });\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nexport class ModalAddUser extends Component {\r\n\r\n\r\n    state = {\r\n        show: false,\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"add__button\">\r\n                    <Button variant=\"primary\" className=\"add__button\" onClick={this.handleShow}>\r\n                        Add User\r\n                    </Button>\r\n\r\n                    <Modal show={this.state.show} onHide={this.handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Add information about user</Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Control type=\"name\" placeholder=\"Name\">\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Control type=\"Email\" placeholder=\"Email\">\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Control type=\"Description\" placeholder=\"Description\">\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" onClick={this.handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"success\"  /*onClick={(event) => onCreateChange(user)}*/ onClick={this.handleClose}>\r\n                                Save User\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n    handleShow = () => {\r\n        this.setState({\r\n            show: true\r\n        });\r\n    }\r\n\r\n\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {Header} from \"./componens/Header/Header\";\nimport {TableUsers} from \"./componens/TableUSers/TableUsers\";\nimport {ButtonUser} from \"./componens/Button\";\nimport {AppBackend} from \"./AppBackend\";\nimport {ModalAddUser} from  \"./componens/Modal/Modal.jsx\"\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: [],\n            limit: 5,\n            search: '',\n            page: 1\n        };\n        this.backend = new AppBackend();\n    }\n\n    async componentDidMount() {\n        const users = await this.backend.get({limit: this.state.limit});\n        this.setState({\n            users\n        });\n    }\n\n    onSelectChange = (event) => {\n        const limit = event.target.value;\n        this.setState({limit}, () => {\n            this.updateUsers();\n        })\n    };\n\n    onSearchChange = (event) => {\n        const search = event.target.value;\n        this.setState({search}, () => {\n            this.updateUsers();\n        })\n    };\n\n    onPageChange = (page) => {\n        this.setState({page}, () => {\n            this.updateUsers();\n        })\n    };\n\n    updateUsers = async () => {\n        const {limit, search, page} = this.state;\n        const users = await this.backend.get({\n            search,\n            limit,\n            page,\n        });\n        this.setState({\n            users\n        });\n    };\n\n    onDelete(userId) {\n        this.backend.delete(userId)\n            .then(_ => {\n                this.updateUsers();\n            });\n    }\n\n    render() {\n\n        return (\n            <div>\n<ModalAddUser/>\n                <Header onSearchChange={this.onSearchChange} onSelectChange={this.onSelectChange}\n                        limit={this.state.limit}/>\n\n                <TableUsers users={this.state.users} onDelete={this.onDelete.bind(this)}/>\n\n                <ButtonUser onPageChange={this.onPageChange}\n                            currentPage={this.state.page}/>\n\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}